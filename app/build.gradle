plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk rootProject.ext.targetSdk

    defaultConfig {
        applicationId "id.my.arieftb.soad"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_URL", "\"https://story-api.dicoding.dev/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    android.testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
}

dependencies {

//    Kotlin
    implementation(dep.kotlin.lib)
    implementation(dep.kotlin.coroutineCore)
    implementation(dep.kotlin.coroutineAndroid)
    implementation(dep.kotlin.reflect)

//    Android UI
    implementation dep.android.appCompat
    implementation dep.android.material
    implementation dep.android.swipeRefreshLayout

//    Android
    implementation dep.android.kotlin
    implementation dep.android.viewModel
    implementation dep.android.viewModelKTX
    implementation(dep.android.activity)

//    Dependency Injection
    implementation(dep.dependencyInjection.hilt)
    kapt(dep.dependencyInjection.hiltCompiler)

//    Remote Service
    implementation(dep.remote.retrofit)
    implementation(dep.remote.retrofitGson)
    implementation(dep.remote.loggingInterceptor)

//    Local Service
    implementation(dep.local.prefDataStore)

//    Logging
    implementation(dep.logging.timber)
    debugImplementation(dep.logging.chucker)
    releaseImplementation(dep.logging.chucker)


//    UI Size
    implementation(dep.ui.dpUnit)
    implementation(dep.ui.spUnit)

//    Utils
    implementation(dep.utils.gson)

//    Log
    implementation(dep.logging.timber)

//    Android Test
    testImplementation dep.unitTest.junit
    testImplementation(dep.unitTest.kotest)
    testImplementation(dep.unitTest.mockk)
    testImplementation(dep.unitTest.mockkAndroid)
    testImplementation(dep.unitTest.mockkAgent)
    testImplementation(dep.kotlin.coroutineTest)
    testImplementation(dep.unitTest.turbine)
    androidTestImplementation dep.unitTest.extJunit
    androidTestImplementation dep.instrumentTest.espresso
}
